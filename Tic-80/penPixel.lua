-- title:   Pen Pixel
-- author:  Steeve-feuille-ciseaux
-- desc:    Draw pixel Art / Puzzle Game
-- site:    https://steeve-feuille-ciseaux.github.io/Portfolio/
-- license: MIT License (change this to your license of choice)
-- version: v2.07.0
-- script:  lua

swapScreen = 0 
pagePuzzle = 1
pageMax = 2
indexMap = 1
unLock = 1

prev_rb = false

prev_lb = false

cellDelete = false

solucePuzzle = false
timerSoluce = 5 
timeRemaining = 0  
lastTime = time()  
countSoluce = 0 

squarePosX = 222 
squarePosY = 100
squareSize = 7  
crossPosX = 222
crossPosY = 100
crossSize = 3  
crossLarg = 0.5 

rainbowColors = {2, 3, 4, 5, 6, 9, 10, 11} 
rainbowIndex = 1 
rainbowTimer = 0 

selectMAP = {
	{
		{99,99,99,99,99,99,99,99,99,00,99,99,99,99,99,99,99,99,99},
		{99,99,99,99,99,99,99,99,00,02,00,99,99,99,99,99,99,99,99},
		{99,99,99,99,99,99,99,00,02,02,03,00,99,99,99,99,99,99,99},
		{99,99,99,99,99,99,99,00,02,03,03,00,99,99,99,99,99,99,99},
		{99,99,99,99,99,99,00,02,03,03,03,04,00,99,99,99,99,99,99},
		{99,99,99,99,99,99,00,03,03,03,04,04,00,99,99,99,99,99,99},
		{00,00,00,00,00,00,03,03,03,04,04,04,05,00,00,00,00,00,00},
		{00,02,02,02,02,03,03,00,04,04,04,00,05,05,06,06,06,09,00},
		{99,00,02,02,03,03,03,00,04,04,05,00,05,06,06,06,09,00,99},
		{99,99,00,03,03,03,04,00,04,05,05,00,06,06,06,09,00,99,99},
		{99,99,99,00,03,04,04,04,05,05,05,06,06,06,09,00,99,99,99},
		{99,99,99,99,00,04,04,05,05,05,06,06,06,09,00,99,99,99,99},
		{99,99,99,99,00,04,05,05,05,06,06,06,09,09,00,99,99,99,99},
		{99,99,99,00,04,05,05,05,06,06,06,09,09,09,10,00,99,99,99},
		{99,99,99,00,05,05,05,06,00,00,00,09,09,10,10,00,99,99,99},
		{99,99,00,05,05,05,00,00,99,99,99,00,00,10,10,11,00,99,99},
		{99,99,00,05,05,00,99,99,99,99,99,99,99,00,11,11,00,99,99},
		{99,99,00,00,00,99,99,99,99,99,99,99,99,99,00,00,00,99,99},    
	},
	{
		{99,99,99,99,99,99,99,99,99,99,99,00,00,00,00,99,99,99,99},
		{99,99,99,99,99,99,99,99,00,00,00,13,13,13,13,00,99,99,99},
		{99,99,99,99,99,99,00,00,13,13,13,13,13,13,00,00,99,99,99},
		{99,99,99,99,99,00,13,13,13,13,13,13,13,13,13,00,99,99,99},
		{99,99,99,00,00,13,13,13,13,13,13,13,13,13,13,13,00,99,99},
		{99,99,00,13,13,13,13,13,13,13,13,13,13,13,13,13,00,99,99},
		{99,00,13,13,13,13,13,13,13,13,13,13,00,00,13,13,13,00,00},
		{99,00,13,13,00,13,13,13,13,13,13,13,00,00,04,04,13,00,99},
		{99,99,00,00,13,13,00,00,13,13,13,13,13,13,04,04,00,00,00},
		{99,99,00,13,13,13,00,00,13,13,00,13,13,13,13,13,13,00,99},
		{99,00,00,00,13,04,04,13,13,13,13,13,13,13,13,13,00,99,99},
		{99,99,00,13,13,04,04,13,13,13,13,13,13,13,00,00,99,99,99},
		{99,99,99,00,13,13,13,13,13,13,13,02,02,02,02,02,00,99,99},
		{99,00,99,99,00,00,00,02,02,02,02,02,02,02,02,13,00,99,99},
		{00,13,00,99,99,00,02,02,02,02,02,13,02,13,13,13,13,00,99},
		{00,13,13,00,99,00,13,13,13,13,02,13,02,13,13,13,13,00,99},
		{99,00,13,13,00,13,13,13,13,13,13,13,13,13,13,13,13,00,99},
		{99,99,00,13,00,13,13,13,13,13,13,13,13,13,13,13,00,99,99},
		{99,99,99,00,00,13,13,13,13,13,13,13,13,13,13,13,00,99,99},
		{99,99,99,99,00,00,13,13,13,00,13,13,00,13,13,00,99,99,99},
		{99,99,99,99,99,99,00,00,00,00,00,00,99,00,00,99,99,99,99}, 
	},
    {
        {99,99,99,99,00,00,00,99,99,99,99,99,99,99,99,99,99,99,99,99,00,00,00,99},
        {99,99,99,00,02,02,02,00,00,99,99,99,99,99,99,99,99,99,00,00,02,02,02,00},
        {99,99,99,00,02,03,03,02,02,00,00,00,00,00,00,00,00,00,02,02,03,03,02,00},
        {99,99,99,00,02,03,03,00,00,02,03,02,03,02,03,02,03,02,00,00,03,03,02,00},
        {99,99,99,00,02,03,00,03,03,02,03,02,03,02,03,02,03,02,03,03,00,03,02,00},
        {99,99,99,00,02,00,03,03,03,03,03,02,03,02,03,02,03,03,03,03,03,00,02,00},
        {99,99,99,99,00,03,03,03,03,03,03,03,03,03,03,03,03,03,03,03,03,03,00,99},
        {99,99,99,99,00,03,03,03,03,03,03,03,03,03,03,03,03,03,03,03,03,03,00,99},
        {99,99,99,99,00,03,03,03,03,03,03,03,03,03,03,03,03,03,03,03,03,03,00,99},
        {99,99,99,00,03,03,03,03,03,03,03,03,03,03,03,03,03,03,03,03,03,03,03,00},
        {99,99,99,00,02,02,03,00,00,00,03,03,03,03,03,03,03,00,00,00,03,02,02,00},
        {99,99,99,00,03,03,03,03,03,03,03,00,03,00,03,00,03,03,03,03,03,03,03,00},
        {99,99,99,00,02,02,03,03,04,04,04,04,00,04,00,04,04,04,04,03,03,02,02,00},
        {99,99,99,00,03,03,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,03,03,00},
        {99,99,99,99,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,99},
        {99,99,99,99,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,99},
        {99,99,99,99,99,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,99,99},
        {99,99,99,99,00,03,03,00,00,04,04,04,04,04,04,04,04,04,00,00,03,03,00,99},
        {99,00,00,99,00,02,03,03,03,04,04,04,00,00,00,04,04,04,03,03,03,02,00,99},
        {00,02,02,00,03,03,03,03,03,04,04,04,04,04,04,04,04,04,03,03,03,03,03,00},
        {00,02,03,00,02,02,02,03,03,04,04,04,04,04,04,04,04,04,03,03,02,02,02,00},
        {99,00,03,00,03,03,03,03,03,03,04,04,04,04,04,04,04,03,03,03,03,03,03,00},
        {99,99,00,00,02,02,02,03,03,03,04,04,04,04,04,04,04,03,03,03,02,02,02,00},
        {99,99,99,00,00,03,03,03,03,03,04,04,04,04,04,04,04,03,03,03,03,03,00,99},
        {99,99,99,99,99,00,00,02,03,03,00,04,00,04,00,04,00,03,03,02,00,00,99,99},
        {99,99,99,99,99,99,99,00,00,00,00,00,00,00,00,00,00,00,00,00,99,99,99,99},
    },
    {
        {99,99,99,99,99,99,00,00,00,00,00,00,99,99,99,99,99,00,00,00,00,00,00,99,99,99,99,99,99},
        {99,99,99,99,99,00,00,10,06,04,03,00,00,99,99,99,00,00,03,04,06,10,00,00,99,99,99,99,99},
        {99,99,99,99,99,00,10,06,04,03,02,01,00,00,99,00,00,01,02,03,04,06,10,00,99,99,99,99,99},
        {99,99,99,99,99,00,06,04,00,00,00,09,10,00,99,00,10,09,00,00,00,04,06,00,99,99,99,99,99},
        {99,99,99,99,99,00,04,03,00,99,00,10,06,00,99,00,06,10,00,99,00,03,04,00,99,99,99,99,99},
        {99,00,00,00,00,00,00,00,00,00,00,06,04,00,00,00,00,00,00,00,00,02,03,00,00,00,00,00,99},
        {00,00,10,06,04,03,02,01,09,10,00,04,03,00,09,02,03,04,06,10,00,01,02,00,04,06,10,00,00},
        {00,10,06,04,03,02,01,09,10,06,00,03,02,00,10,01,02,03,04,06,00,09,01,00,03,04,06,10,00},
        {00,06,04,00,00,00,00,00,00,00,00,02,01,00,00,00,00,00,00,00,00,10,09,00,00,00,04,06,00},
        {00,04,03,00,99,00,10,06,00,99,00,01,09,00,99,00,09,01,00,99,00,06,10,00,99,00,03,04,00},
        {00,03,02,00,00,00,06,04,00,00,00,09,10,00,99,00,10,09,00,00,00,00,00,00,00,00,02,03,00},
        {00,00,01,09,10,00,04,03,00,01,09,10,06,00,99,00,06,10,09,01,02,03,04,06,10,09,01,00,00},
        {99,00,00,10,06,00,03,02,00,09,10,06,04,00,99,00,04,06,10,09,01,02,03,04,06,10,00,00,99},
        {99,99,00,00,00,00,02,01,00,00,00,00,00,00,99,00,00,00,00,00,00,00,00,00,00,00,00,99,99},
        {99,99,99,99,99,00,01,09,00,99,99,99,99,99,99,99,99,99,99,99,00,09,01,00,99,99,99,99,99},
        {99,99,00,00,00,00,00,00,00,00,00,00,00,00,99,00,00,00,00,00,00,01,02,00,00,00,00,99,99},
        {99,00,00,10,06,04,03,02,01,09,10,06,04,00,99,00,04,06,10,09,00,02,03,00,06,10,00,00,99},
        {00,00,01,09,10,06,04,03,02,01,09,10,06,00,99,00,06,10,09,01,00,03,04,00,10,09,01,00,00},
        {00,03,02,00,00,00,00,00,00,00,00,09,10,00,99,00,10,09,00,00,00,04,06,00,00,00,02,03,00},
        {00,04,03,00,99,00,10,06,00,99,00,01,09,00,99,00,09,01,00,99,00,06,10,00,99,00,03,04,00},
        {00,06,04,00,00,00,09,10,00,00,00,00,00,00,00,00,01,02,00,00,00,00,00,00,00,00,04,06,00},
        {00,10,06,04,03,00,01,09,00,06,04,03,02,01,09,00,02,03,00,06,10,09,01,02,03,04,06,10,00},
        {00,00,10,06,04,00,02,01,00,10,06,04,03,02,01,00,03,04,00,10,09,01,02,03,04,06,10,00,00},
        {99,00,00,00,00,00,03,02,00,00,00,00,00,00,00,00,04,06,00,00,00,00,00,00,00,00,00,00,99},
        {99,99,99,99,99,00,04,03,00,99,00,10,06,00,99,00,06,10,00,99,00,03,04,00,99,99,99,99,99},
        {99,99,99,99,99,00,06,04,00,00,00,09,10,00,99,00,10,09,00,00,00,04,06,00,99,99,99,99,99},
        {99,99,99,99,99,00,10,06,04,03,02,01,00,00,99,00,00,01,02,03,04,06,10,00,99,99,99,99,99},
        {99,99,99,99,99,00,00,10,06,04,03,00,00,99,99,99,00,00,03,04,06,10,00,00,99,99,99,99,99},
        {99,99,99,99,99,99,00,00,00,00,00,00,99,99,99,99,99,00,00,00,00,00,00,99,99,99,99,99,99},
    },
    {
        {99,99,99,99,99,99,99,99,99,99,99,00,00,99,00,00,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,99,00,09,09,00,09,09,00,99,99,99,99,99,99,99,99,99,99},
        {99,99,00,00,00,00,00,99,99,00,09,10,10,10,10,10,09,00,99,99,00,00,00,00,00,99,99},
        {99,99,00,06,06,06,06,00,99,00,09,10,10,10,10,10,09,00,99,00,06,06,06,06,00,99,99},
        {99,99,00,06,06,06,06,06,00,09,10,10,10,10,10,10,10,09,00,06,06,06,06,06,00,99,99},
        {99,99,00,06,06,06,06,06,00,10,10,10,10,10,10,10,10,10,00,06,06,06,06,06,00,99,99},
        {99,99,00,06,06,06,06,06,00,10,10,10,10,10,10,10,10,10,00,06,06,06,06,06,00,99,99},
        {99,99,99,00,06,06,06,06,00,10,10,10,10,10,10,10,10,10,00,06,06,06,06,00,99,99,99},
        {99,99,99,99,00,00,00,00,06,00,10,10,10,10,10,10,10,00,06,00,00,00,00,99,99,99,99},
        {99,99,00,00,09,10,10,10,00,00,10,10,10,00,10,10,10,00,00,10,10,10,09,00,00,99,99},
        {99,00,09,09,10,10,10,10,10,10,00,10,10,00,10,10,00,10,10,10,10,10,10,09,09,00,99},
        {00,09,10,10,10,10,10,10,10,10,10,00,10,00,10,00,10,10,10,10,10,10,10,10,10,09,00},
        {00,09,10,10,10,10,10,10,10,10,10,10,00,03,00,10,10,10,10,10,10,10,10,10,10,09,00},
        {99,00,10,10,10,10,10,10,10,00,00,00,03,04,03,00,00,00,10,10,10,10,10,10,10,00,99},
        {00,09,10,10,10,10,10,10,10,10,10,10,00,03,00,10,10,10,10,10,10,10,10,10,10,09,00},
        {00,09,10,10,10,10,10,10,10,10,10,00,10,00,10,00,10,10,10,10,10,10,10,10,10,09,00},
        {99,00,09,09,10,10,10,10,10,10,00,10,10,00,10,10,00,10,10,10,10,10,10,09,09,00,99},
        {99,99,00,00,09,10,10,10,00,00,10,10,10,00,10,10,10,00,00,10,10,10,09,00,00,99,99},
        {99,99,99,99,00,00,00,00,06,00,10,10,10,10,10,10,10,00,06,00,00,00,00,99,99,99,99},
        {99,99,99,00,06,06,06,06,00,10,10,10,10,10,10,10,10,10,00,06,06,06,06,00,99,99,99},
        {99,99,00,06,06,06,06,06,00,10,10,10,10,10,10,10,10,10,00,06,06,06,06,06,00,99,99},
        {99,99,00,06,06,06,06,06,00,10,10,10,10,10,10,10,10,10,00,06,06,06,06,06,00,99,99},
        {99,99,00,06,06,06,06,06,00,09,10,10,10,10,10,10,10,09,00,06,06,06,06,06,00,99,99},
        {99,99,00,06,06,06,06,00,99,00,09,10,10,10,10,10,09,00,99,00,06,06,06,06,00,99,99},
        {99,99,00,00,00,00,00,99,99,00,09,10,10,10,10,10,09,00,99,99,00,00,00,00,00,99,99},
        {99,99,99,99,99,99,99,99,99,99,00,09,09,00,09,09,00,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,99,99,00,00,99,00,00,99,99,99,99,99,99,99,99,99,99,99},
    },
    {
        {99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,09,99,99,99,99,99,09,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,99,99,99,99,99,09,09,09,99,99,99,09,09,09,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,99,99,99,99,09,09,10,09,09,99,09,09,10,09,99,99,99,99,99,09,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,09,09,09,99,09,10,12,10,09,09,09,10,12,10,10,99,99,99,09,09,09,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,09,09,10,09,10,12,12,10,09,09,10,12,12,12,10,99,09,09,09,10,09,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,09,10,12,12,10,12,10,09,12,10,10,12,12,09,10,10,10,12,12,12,10,99,99,99,09,99,99,99,99},
        {99,99,99,99,09,09,99,99,99,09,12,12,12,12,10,10,12,12,12,10,12,09,09,10,10,12,12,12,12,10,99,09,09,09,99,99,99,99},
        {99,99,99,99,09,09,09,09,09,10,10,12,12,12,12,10,12,12,12,10,09,10,09,09,12,12,09,12,12,10,09,10,09,09,99,99,99,99},
        {99,99,99,99,09,10,10,10,10,09,10,12,09,10,12,10,12,12,12,09,10,10,10,09,12,12,09,09,10,10,10,12,10,09,99,99,99,99},
        {99,99,99,99,09,10,12,12,10,10,10,10,09,09,10,10,12,12,12,10,10,12,10,10,12,12,10,09,09,12,12,12,12,10,99,99,99,99},
        {99,99,99,99,09,10,12,12,12,12,10,09,09,09,09,10,12,12,10,10,12,12,12,10,12,10,10,10,09,12,12,12,12,10,99,99,99,99},
        {99,09,09,09,09,10,12,12,12,12,12,09,10,10,09,09,10,12,10,12,12,12,12,10,12,10,12,10,10,12,12,12,12,09,09,09,09,09},
        {99,09,09,10,10,09,09,12,12,12,09,10,10,12,10,09,09,10,12,12,12,12,12,10,10,12,12,12,10,12,12,12,10,10,10,10,09,09},
        {99,09,10,12,12,10,10,12,12,12,10,10,12,12,12,10,09,09,12,12,12,12,09,09,12,12,12,12,10,12,12,12,10,12,12,10,09,99},
        {99,99,10,12,12,12,10,12,12,12,10,12,12,12,12,12,10,09,12,12,12,09,10,10,09,09,12,09,10,12,12,10,12,12,12,12,10,99},
        {99,99,10,10,12,12,12,10,12,12,10,12,12,12,12,12,12,10,09,12,09,10,12,12,10,10,09,10,12,12,10,12,12,12,12,10,09,99},
        {99,99,99,10,10,12,12,10,10,12,10,12,12,12,12,12,12,12,10,12,10,12,12,12,12,12,10,12,12,10,12,12,12,12,12,10,99,99},
        {99,99,99,99,10,10,12,12,09,09,12,12,12,12,12,12,12,12,10,10,12,12,12,12,10,10,12,12,10,12,12,12,12,12,10,99,99,99},
        {99,99,99,99,10,09,09,09,10,10,09,09,12,12,12,12,12,12,12,10,12,12,10,10,12,12,10,10,09,09,12,12,10,10,09,09,99,99},
        {99,99,09,10,12,12,10,10,12,12,10,09,09,12,12,12,12,12,12,10,12,10,12,12,12,12,12,12,10,09,09,09,12,10,10,09,09,09},
        {99,09,10,12,12,12,12,12,12,12,12,10,10,09,12,12,12,12,12,10,10,12,12,12,12,12,12,12,12,10,09,12,12,12,10,10,09,09},
        {09,09,10,12,12,12,12,12,12,12,12,12,12,10,10,10,12,12,12,10,12,12,12,12,12,12,12,12,10,09,12,12,12,12,10,09,09,99},
        {99,09,09,10,12,12,12,12,12,12,12,12,12,12,10,10,10,10,10,10,12,12,12,12,12,12,12,10,09,12,12,12,12,10,09,99,99,99},
        {99,99,99,09,10,10,10,12,12,12,12,12,12,12,12,10,10,12,12,12,10,12,12,12,12,10,10,09,12,12,12,12,10,09,99,99,99,99},
        {99,99,99,99,09,09,09,10,10,10,12,12,12,12,10,10,12,12,12,12,12,10,07,07,10,12,12,12,12,10,10,10,99,99,99,99,99,99},
        {99,99,99,99,99,05,09,09,09,10,10,10,10,07,07,10,12,12,12,12,12,12,10,07,07,07,07,07,07,06,06,05,99,99,99,99,99,99},
        {99,99,99,99,99,99,05,05,06,07,07,07,07,07,07,12,12,12,12,12,12,12,10,07,07,07,06,06,06,06,05,05,05,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,06,06,06,06,07,07,06,10,12,12,12,12,12,12,10,06,07,07,07,06,05,05,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,05,05,06,07,07,06,05,09,10,12,12,12,12,10,10,05,06,06,07,07,06,05,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,05,05,06,06,06,06,05,05,09,09,10,12,12,10,10,09,05,05,05,06,06,06,06,05,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,05,05,05,05,99,99,99,09,09,10,10,10,09,99,99,99,05,05,05,05,05,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,09,09,09,09,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,09,09,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
    },
    {
        {99,99,99,99,99,99,99,99,00,00,00,00,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,00,10,10,10,10,00,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,00,09,09,09,09,09,10,00,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,00,09,09,09,09,00,10,00,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,00,09,09,09,09,00,10,00,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,00,09,09,00,09,10,00,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,00,00,09,09,10,00,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,00,09,09,09,10,00,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,00,09,09,09,09,00,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,00,09,09,09,10,00,00,00,00,00,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,00,09,09,09,09,00,10,10,10,10,10,00,00,99,99,99,99,99,00,00,00,00,99,99},
        {99,99,99,99,99,00,09,09,09,09,00,09,09,09,09,09,10,10,00,99,99,00,00,10,10,10,10,00,99},
        {99,99,99,99,00,09,09,09,09,09,09,09,09,09,09,09,09,09,10,00,00,10,10,09,00,00,09,09,00},
        {99,99,99,99,00,09,09,09,09,09,09,09,09,09,09,00,00,09,09,10,10,09,09,00,09,09,09,09,00},
        {99,99,99,99,00,09,09,09,09,09,09,09,09,09,09,09,09,00,09,09,09,00,00,09,09,09,09,09,00},
        {99,99,99,99,00,09,09,09,09,09,09,09,09,09,09,09,09,09,09,09,09,00,09,09,09,09,09,09,00},
        {99,99,99,99,99,00,09,09,09,09,09,09,09,09,09,09,09,09,09,09,09,09,09,09,09,09,09,09,00},
        {99,99,99,99,99,99,00,09,09,09,09,09,09,09,00,09,09,09,09,09,09,09,09,09,09,09,09,09,00},
        {99,99,99,99,99,99,99,00,00,00,00,00,00,00,09,09,09,09,09,09,09,09,00,00,09,09,09,09,00},
        {99,99,99,99,99,00,00,00,00,09,00,03,03,00,09,09,09,09,09,09,09,00,10,10,00,09,09,00,99},
        {99,99,99,99,00,09,09,00,00,09,09,00,00,09,10,09,09,09,09,09,00,00,10,10,10,00,09,00,99},
        {99,99,99,00,09,09,09,09,09,00,10,10,10,10,00,09,09,09,09,00,09,09,00,10,10,00,00,99,99},
        {99,99,99,00,09,09,09,09,09,09,00,00,00,00,09,09,09,09,00,09,09,09,09,00,00,00,99,99,99},
        {99,99,99,99,00,00,09,09,09,09,09,09,09,09,09,09,09,09,09,09,09,09,09,09,00,99,99,99,99},
        {99,99,99,99,99,99,00,09,09,00,09,09,09,09,09,09,09,09,09,09,09,09,09,00,99,99,99,99,99},
        {99,99,99,99,99,99,99,00,00,10,10,10,10,10,09,09,09,09,09,09,09,09,00,99,99,99,99,99,99},
        {99,99,99,99,99,99,00,10,10,10,10,10,10,10,10,09,09,09,09,09,00,00,09,00,99,99,99,99,99},
        {99,99,99,99,99,00,10,10,10,10,10,10,10,10,10,09,09,09,09,09,09,09,00,99,99,99,99,99,99},
        {99,99,99,99,99,00,10,10,10,10,10,10,10,10,10,09,09,09,09,09,09,09,00,99,99,99,99,99,99},
        {99,99,99,99,00,10,10,10,10,10,10,10,10,10,10,10,09,09,09,09,09,09,09,00,99,99,99,99,99},
        {99,99,99,99,00,10,10,10,10,10,10,10,10,10,10,10,09,09,09,09,09,09,09,00,99,99,99,99,99},
        {99,99,00,00,00,10,10,10,10,10,10,10,10,10,10,09,09,09,09,09,00,00,00,99,99,99,99,99,99},
        {99,00,10,10,00,00,10,10,10,10,10,10,10,10,10,09,09,09,09,00,10,10,10,00,99,99,99,99,99},
        {00,10,10,10,10,00,10,10,10,10,10,10,10,10,09,09,09,09,00,10,10,10,10,10,00,99,99,99,99},
        {00,10,10,10,10,00,00,10,10,10,10,10,10,09,09,09,09,09,00,10,10,10,10,10,00,99,99,99,99},
        {00,10,10,10,10,00,09,00,09,09,09,09,09,09,09,09,09,09,00,10,10,10,10,10,00,99,99,99,99},
        {99,00,10,10,10,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,10,10,10,00,99,99,99,99,99},
        {99,99,00,00,00,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,00,00,00,99,99,99,99,99,99},
    },
    {
        {99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,99},
        {99,00,02,02,02,02,02,02,00,10,00,06,06,06,06,06,00,02,02,02,02,02,00,06,06,06,06,06,00,10,00,02,02,02,02,02,02,00,99},
        {99,00,02,00,00,00,00,00,00,10,00,06,00,10,00,06,00,00,00,02,00,00,00,06,00,10,00,06,00,10,00,00,00,00,00,00,02,00,99},
        {99,00,02,00,01,01,01,01,00,10,10,06,10,04,04,04,04,04,00,02,00,04,04,04,04,04,10,06,10,10,00,01,01,01,01,00,02,00,99},
        {99,00,02,00,01,00,00,01,00,00,00,06,00,04,00,06,00,04,00,00,00,04,00,06,00,04,00,06,00,00,00,01,00,00,01,00,02,00,99},
        {99,00,02,00,01,00,10,10,10,10,00,06,06,04,06,03,03,03,03,03,03,03,03,03,06,04,06,06,00,10,10,10,10,00,01,00,02,00,99},
        {99,00,02,00,01,01,10,01,00,10,00,00,00,04,00,03,00,04,00,03,00,04,00,03,00,04,00,00,00,10,00,01,10,01,01,00,02,00,99},
        {99,00,00,00,00,00,10,00,06,06,06,06,00,04,04,03,04,02,02,02,02,02,04,03,04,04,00,06,06,06,06,00,10,00,00,00,00,00,99},
        {99,00,10,10,10,00,10,10,06,10,00,06,00,00,00,03,00,02,00,03,00,02,00,03,00,00,00,06,00,10,06,10,10,00,10,10,10,00,99},
        {99,00,00,00,10,00,00,00,06,00,04,04,04,04,00,03,03,02,03,03,03,02,03,03,00,04,04,04,04,00,06,00,00,00,10,00,00,00,99},
        {99,00,06,06,06,06,06,00,06,06,04,06,00,04,00,00,00,02,00,00,00,02,00,00,00,04,00,06,04,06,06,00,06,06,06,06,06,00,99},
        {99,00,06,00,10,00,06,00,00,00,04,00,03,03,03,03,00,02,02,02,02,02,00,03,03,03,03,00,04,00,00,00,06,00,10,00,06,00,99},
        {99,00,06,10,04,04,04,04,04,00,04,04,03,04,00,03,00,00,00,00,00,00,00,03,00,04,03,04,04,00,04,04,04,04,04,10,06,00,99},
        {99,00,06,00,04,00,06,00,04,00,00,00,03,00,02,02,02,02,00,10,00,02,02,02,02,00,03,00,00,00,04,00,06,00,04,00,06,00,99},
        {99,00,06,06,04,06,03,03,03,03,03,00,03,03,02,03,00,02,00,10,00,02,00,03,02,03,03,00,03,03,03,03,03,06,04,06,06,00,99},
        {99,00,00,00,04,00,03,00,04,00,03,00,00,00,02,00,00,00,00,00,00,00,00,00,02,00,00,00,03,00,04,00,03,00,04,00,00,00,99},
        {99,00,02,00,04,04,03,04,02,02,02,02,02,00,02,02,00,02,00,01,00,02,00,02,02,00,02,02,02,02,02,04,03,04,04,00,02,00,99},
        {99,00,02,00,00,00,03,00,02,00,03,00,02,00,00,00,00,00,00,01,00,00,00,00,00,00,02,00,03,00,02,00,03,00,00,00,02,00,99},
        {99,00,02,02,02,00,03,03,02,03,03,00,02,00,10,10,00,01,01,01,01,01,00,10,10,00,02,00,03,03,02,03,03,00,02,02,02,00,99},
        {99,00,02,00,00,00,03,00,02,00,03,00,02,00,00,00,00,00,00,01,00,00,00,00,00,00,02,00,03,00,02,00,03,00,00,00,02,00,99},
        {99,00,02,00,04,04,03,04,02,02,02,02,02,00,02,02,00,02,00,01,00,02,00,02,02,00,02,02,02,02,02,04,03,04,04,00,02,00,99},
        {99,00,00,00,04,00,03,00,04,00,03,00,00,00,02,00,00,00,00,00,00,00,00,00,02,00,00,00,03,00,04,00,03,00,04,00,00,00,99},
        {99,00,06,06,04,06,03,03,03,03,03,00,03,03,02,03,00,02,00,10,00,02,00,03,02,03,03,00,03,03,03,03,03,06,04,06,06,00,99},
        {99,00,06,00,04,00,06,00,04,00,00,00,03,00,02,02,02,02,00,10,00,02,02,02,02,00,03,00,00,00,04,00,06,00,04,00,06,00,99},
        {99,00,06,10,04,04,04,04,04,00,04,04,03,04,00,03,00,00,00,00,00,00,00,03,00,04,03,04,04,00,04,04,04,04,04,10,06,00,99},
        {99,00,06,00,10,00,06,00,00,00,04,00,03,03,03,03,00,02,02,02,02,02,00,03,03,03,03,00,04,00,00,00,06,00,10,00,06,00,99},
        {99,00,06,06,06,06,06,00,06,06,04,06,00,04,00,00,00,02,00,00,00,02,00,00,00,04,00,06,04,06,06,00,06,06,06,06,06,00,99},
        {99,00,00,00,10,00,00,00,06,00,04,04,04,04,00,03,03,02,03,03,03,02,03,03,00,04,04,04,04,00,06,00,00,00,10,00,00,00,99},
        {99,00,10,10,10,00,10,10,06,10,00,06,00,00,00,03,00,02,00,03,00,02,00,03,00,00,00,06,00,10,06,10,10,00,10,10,10,00,99},
        {99,00,00,00,00,00,10,00,06,06,06,06,00,04,04,03,04,02,02,02,02,02,04,03,04,04,00,06,06,06,06,00,10,00,00,00,00,00,99},
        {99,00,02,00,01,01,10,01,00,10,00,00,00,04,00,03,00,04,00,03,00,04,00,03,00,04,00,00,00,10,00,01,10,01,01,00,02,00,99},
        {99,00,02,00,01,00,10,10,10,10,00,06,06,04,06,03,03,03,03,03,03,03,03,03,06,04,06,06,00,10,10,10,10,00,01,00,02,00,99},
        {99,00,02,00,01,00,00,01,00,00,00,06,00,04,00,06,00,04,00,00,00,04,00,06,00,04,00,06,00,00,00,01,00,00,01,00,02,00,99},
        {99,00,02,00,01,01,01,01,00,10,10,06,10,04,04,04,04,04,00,02,00,04,04,04,04,04,10,06,10,10,00,01,01,01,01,00,02,00,99},
        {99,00,02,00,00,00,00,00,00,10,00,06,00,10,00,06,00,00,00,02,00,00,00,06,00,10,00,06,00,10,00,00,00,00,00,00,02,00,99},
        {99,00,02,02,02,02,02,02,00,10,00,06,06,06,06,06,00,02,02,02,02,02,00,06,06,06,06,06,00,10,00,02,02,02,02,02,02,00,99},
        {99,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,99},
        {99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
    },
    {
        {99,99,99,99,99,99,00,00,00,00,00,00,99,99,99,99,99,99},
        {99,99,99,99,99,00,10,10,09,09,09,09,00,99,99,99,99,99},
        {99,99,99,99,00,10,10,10,10,09,09,09,09,00,99,99,99,99},
        {99,99,99,00,10,10,10,00,00,00,00,09,09,09,00,99,99,99},
        {99,99,00,10,10,10,00,04,04,04,03,00,09,09,09,00,99,99},
        {99,99,00,10,10,00,04,04,00,03,03,03,00,09,06,00,99,99},
        {99,99,00,11,00,04,04,00,02,00,03,03,00,06,06,00,99,99},
        {99,99,00,11,00,04,00,02,02,00,03,03,00,06,06,00,99,99},
        {99,99,00,11,00,05,00,02,02,02,03,00,06,06,06,00,99,99},
        {99,99,99,00,00,05,05,00,00,00,00,06,06,06,06,00,99,99},
        {99,99,99,99,00,05,05,05,05,05,05,06,06,06,00,99,99,99},
        {99,99,99,99,99,00,05,05,05,05,06,06,06,00,99,99,99,99},
        {99,99,99,99,99,99,00,00,00,00,00,00,00,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,00,12,00,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,00,12,00,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,00,12,00,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,00,12,00,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,00,12,00,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,00,12,00,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,00,12,00,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,00,99,99,99,99,99,99,99,99},
    },
    {
        {99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,99,99,99,99,00,00,00,00,00,00,00,00,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,99,99,00,00,06,05,05,05,06,06,06,06,00,00,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,99,00,11,11,06,06,05,05,05,06,06,06,06,06,00,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,00,11,06,06,06,06,05,05,05,06,06,06,06,06,06,00,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,00,06,06,06,06,06,05,05,06,06,06,06,06,06,06,06,11,00,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,00,06,06,06,06,06,05,05,06,06,06,06,06,06,06,05,06,06,06,00,00,00,00,00,99,99,99},
        {99,99,99,99,99,99,99,00,06,06,06,06,05,06,06,06,06,06,06,11,11,05,05,06,06,06,00,04,04,04,04,00,99,99},
        {99,99,99,99,99,99,00,06,06,06,06,06,06,06,06,06,06,06,11,05,05,05,06,06,06,06,06,00,03,04,04,04,00,99},
        {99,99,99,99,99,99,00,06,06,06,06,06,05,05,06,11,11,11,06,06,06,06,06,06,06,00,00,00,00,04,04,03,00,99},
        {99,99,99,99,99,00,00,06,06,06,06,05,05,11,11,11,06,06,06,06,06,06,00,00,00,00,04,04,04,03,00,00,99,99},
        {99,99,99,00,00,04,00,06,06,05,05,05,06,06,06,06,00,00,00,00,00,00,04,04,04,04,04,03,00,00,99,99,99,99},
        {99,99,00,04,04,00,00,05,05,05,06,00,00,00,00,00,04,04,04,04,04,04,04,03,03,00,00,00,00,99,99,99,99,99},
        {99,00,04,04,03,00,00,00,00,00,00,04,04,04,04,04,04,03,03,03,03,00,00,00,00,06,05,00,99,99,99,99,99,99},
        {99,00,04,04,04,04,04,04,04,04,04,04,03,03,03,03,03,00,00,00,00,06,06,06,06,05,05,00,99,99,99,99,99,99},
        {99,99,00,03,03,03,03,03,03,03,03,03,00,00,00,00,00,06,06,06,06,06,06,05,05,05,05,00,99,99,99,99,99,99},
        {99,99,99,00,00,00,00,00,00,00,00,00,06,06,06,06,06,06,06,06,06,05,05,05,05,05,00,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,00,06,06,06,06,06,06,11,11,06,06,06,06,05,05,05,05,05,06,00,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,00,06,06,06,11,11,11,06,06,06,06,05,05,05,06,06,06,00,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,00,06,06,06,06,06,06,06,06,06,06,06,06,11,11,00,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,99,00,06,06,06,06,06,06,06,06,06,06,11,11,00,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,99,99,00,00,06,06,06,06,06,06,06,11,00,00,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,99,99,99,99,00,00,00,00,00,00,00,00,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
    },
    {
        {99,99,99,99,99,99,99,99,99,99,99,99,99,99,00,00,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,99,99,99,99,99,00,03,00,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,99,99,99,99,99,00,03,00,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,99,99,99,99,00,03,03,03,00,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,99,99,99,99,00,03,04,03,00,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,99,99,99,99,00,04,04,04,00,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,99,99,99,99,00,04,00,04,00,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,99,99,99,99,99,00,00,00,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,00,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,99,99,99,99,99,00,12,00,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,99,99,99,99,99,00,02,00,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,99,99,99,99,99,00,12,00,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,99,99,99,99,99,00,02,00,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,99,99,99,99,99,00,12,00,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,99,99,00,00,00,00,02,00,00,00,00,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,00,00,05,05,05,00,12,00,05,05,05,00,00,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,00,00,02,11,11,11,05,00,02,00,11,11,11,11,05,00,00,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,00,05,05,02,11,11,11,05,00,12,00,11,11,11,11,11,04,05,00,99,99,99,99,99,99},
        {99,99,99,99,99,00,05,05,05,11,11,09,11,11,00,02,00,11,11,11,11,04,11,11,05,00,99,99,99,99,99},
        {99,99,99,99,00,05,09,11,05,05,09,11,11,05,11,11,11,05,11,11,11,11,05,11,09,09,00,99,99,99,99},
        {99,99,99,00,05,05,11,11,05,05,11,11,11,11,05,05,05,11,11,11,11,11,05,11,11,05,05,00,99,99,99},
        {99,99,00,05,05,05,11,11,11,05,05,05,11,11,11,11,11,04,11,11,11,02,11,11,11,05,05,05,00,99,99},
        {99,99,00,04,05,05,02,11,11,11,05,11,11,05,05,11,11,04,11,11,05,05,02,11,11,05,05,05,00,99,99},
        {99,00,11,11,04,05,02,11,11,11,11,05,05,05,05,09,05,05,05,05,05,11,11,11,05,04,05,05,05,00,99},
        {99,00,11,11,11,05,05,05,11,11,11,11,11,11,05,09,05,05,05,05,11,11,11,11,05,05,04,05,05,00,99},
        {99,00,11,09,09,11,05,05,02,11,11,11,11,11,11,11,11,11,11,11,09,11,11,05,05,05,11,05,05,00,99},
        {99,00,11,11,11,11,11,05,05,02,05,11,11,09,11,11,11,11,11,11,09,11,05,05,05,11,05,05,05,00,99},
        {99,00,11,11,05,11,11,11,05,05,05,05,09,05,11,11,11,05,05,05,05,05,05,02,02,11,05,05,05,00,99},
        {99,00,11,11,02,11,11,11,11,11,05,05,05,05,05,05,02,05,05,05,05,11,11,11,11,05,05,05,09,00,99},
        {99,00,11,11,02,11,05,11,11,11,11,11,11,05,05,05,02,05,05,11,11,11,11,11,05,05,05,05,05,00,99},
        {99,99,00,11,11,11,11,05,11,11,11,11,11,11,11,11,11,11,11,11,11,11,05,05,05,05,05,05,00,99,99},
        {99,99,00,11,11,11,11,05,05,02,11,11,04,11,11,11,11,05,05,09,05,05,05,05,05,09,05,05,00,99,99},
        {99,99,99,00,11,11,11,11,02,05,05,05,04,05,05,05,05,05,09,11,11,11,11,11,09,05,05,00,99,99,99},
        {99,99,99,00,02,11,11,11,11,11,11,11,11,11,11,02,11,11,11,11,11,05,05,05,05,05,02,00,99,99,99},
        {99,99,99,99,00,02,03,11,11,11,11,11,11,11,02,11,11,05,05,05,05,05,05,05,03,02,00,99,99,99,99},
        {99,99,99,99,00,02,03,02,03,03,05,05,05,05,05,05,05,05,05,05,05,03,03,02,03,02,00,99,99,99,99},
        {99,99,99,99,00,02,03,03,02,03,02,03,03,02,03,02,03,02,03,03,02,03,02,03,03,02,00,99,99,99,99},
        {99,99,99,99,00,02,03,03,02,03,03,02,03,02,03,02,03,02,03,02,03,03,02,03,03,02,00,99,99,99,99},
        {99,99,99,99,00,03,02,03,02,03,03,02,03,02,03,02,03,02,03,02,03,03,02,03,02,03,00,99,99,99,99},
        {99,99,99,99,00,03,02,03,02,03,03,02,03,02,03,02,03,02,03,02,03,03,02,03,02,03,00,99,99,99,99},
        {99,99,99,99,99,00,02,03,03,02,03,02,03,02,03,02,03,02,03,02,03,02,03,03,02,00,99,99,99,99,99},
        {99,99,99,99,99,00,02,03,03,02,03,02,03,02,03,02,03,02,03,02,03,02,03,03,02,00,99,99,99,99,99},
        {99,99,99,99,99,99,00,02,03,02,03,02,03,02,03,02,03,02,03,02,03,02,03,02,00,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,00,00,02,03,02,03,02,03,02,03,02,03,02,03,02,00,00,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,00,00,00,00,00,00,00,00,00,00,00,00,00,99,99,99,99,99,99,99,99,99},
    },
    {
        {99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,15,99,99,99,99,99,99,99,99,99,99,99,99,99,15,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,15,15,99,99,99,99,99,99,99,99,99,99,99,00,15,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,15,15,15,99,99,99,99,99,99,99,99,99,00,00,15,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,15,15,15,00,00,15,15,15,15,15,15,15,00,15,15,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,15,15,00,00,15,15,15,15,15,15,15,15,15,15,15,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,15,00,00,00,15,15,15,15,15,15,15,15,15,15,15,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,15,00,00,15,15,15,15,15,15,15,15,15,15,15,15,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,15,00,00,00,00,00,00,00,00,00,00,00,00,15,15,00,00,00,99,99,99,99},
        {99,99,99,99,99,99,99,15,00,00,00,00,00,00,00,00,00,00,00,00,00,15,00,00,00,99,99,99,99},
        {99,99,99,99,99,99,99,15,00,00,00,00,00,00,00,00,00,00,00,00,00,15,00,04,00,99,99,99,99},
        {99,00,00,99,99,99,99,15,00,15,15,00,00,00,00,00,00,15,15,00,00,15,00,00,00,99,99,99,99},
        {99,04,00,99,99,99,99,15,00,00,00,15,15,00,00,15,15,00,00,00,00,15,00,04,00,99,99,99,99},
        {99,00,00,99,00,00,00,15,00,12,12,12,15,15,00,15,00,12,12,12,00,15,00,00,00,99,99,99,99},
        {99,00,00,99,00,00,00,15,00,00,12,12,12,00,15,00,12,12,12,00,00,15,00,00,00,99,99,99,99},
        {99,04,00,99,00,04,00,15,00,00,00,00,00,00,15,00,00,00,00,00,00,15,00,00,00,99,99,99,99},
        {99,00,00,99,00,00,00,15,03,03,00,00,00,15,00,00,00,00,00,04,04,15,00,04,00,99,00,00,99},
        {99,00,00,00,00,04,00,15,03,03,03,03,03,15,00,00,04,04,04,04,04,15,00,00,00,99,00,00,99},
        {99,00,00,00,00,00,00,15,03,03,04,04,03,03,03,04,04,04,04,03,04,15,00,00,00,99,00,00,99},
        {99,00,04,00,00,00,00,15,03,03,04,04,04,04,04,04,04,04,04,03,04,15,00,04,00,00,00,00,99},
        {99,00,00,00,00,00,00,15,03,03,04,04,03,03,03,03,03,04,03,04,04,15,00,00,00,00,00,00,99},
        {99,00,04,00,00,00,00,15,00,04,03,04,04,04,04,04,04,04,04,04,15,15,00,00,00,00,04,00,99},
        {99,00,00,00,00,00,15,15,15,00,04,03,04,04,04,04,04,03,04,15,15,15,15,00,00,00,00,00,99},
        {99,00,00,00,15,15,15,15,15,00,00,03,04,04,04,04,04,03,00,15,15,15,15,15,15,00,00,00,99},
        {99,15,15,15,15,15,15,15,15,15,00,00,03,03,03,03,03,15,00,15,15,15,15,15,15,15,15,15,99},
        {99,15,15,15,15,15,15,15,15,15,00,15,00,00,00,00,15,15,15,15,15,15,15,15,15,15,15,15,99},
        {99,15,15,15,15,15,15,15,15,15,15,00,00,00,15,15,15,15,15,15,15,15,15,15,15,15,15,15,99},
        {99,15,15,00,15,15,00,15,15,15,15,15,15,00,00,15,15,15,15,15,15,15,00,15,15,00,15,15,99},
        {99,99,15,00,15,00,13,13,15,15,15,15,15,00,00,15,15,15,15,15,15,13,13,00,15,00,15,99,99},
        {99,99,15,00,00,13,13,13,13,13,15,15,15,15,00,15,15,15,15,13,13,13,13,13,00,00,15,99,99},
        {99,99,99,00,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,00,99,99,99},
        {99,99,99,13,13,13,13,13,13,13,04,04,04,04,04,04,04,04,04,13,13,13,13,13,13,13,99,99,99},
        {99,99,99,13,13,13,13,13,13,04,04,00,04,00,04,00,04,00,04,04,13,13,13,13,13,13,99,99,99},
        {99,99,99,13,13,13,13,13,04,04,00,00,04,00,00,00,04,00,00,04,04,13,13,13,13,13,99,99,99},
        {99,99,99,13,13,13,13,13,04,00,00,00,00,00,00,00,00,00,00,00,04,13,13,13,13,13,99,99,99},
        {99,99,99,99,13,13,13,13,04,00,00,00,00,00,00,00,00,00,00,00,04,13,13,13,13,99,99,99,99},
        {99,99,99,99,13,13,13,13,04,04,00,00,04,00,00,00,04,00,00,04,04,13,13,13,13,99,99,99,99},
        {99,99,99,99,99,13,13,13,13,04,04,00,04,04,00,04,04,00,04,04,13,13,13,13,99,99,99,99,99},
        {99,99,99,99,99,99,99,13,13,13,04,04,04,04,04,04,04,04,04,13,13,13,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,13,13,13,13,13,13,13,13,13,13,13,13,13,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,99,13,13,13,13,13,13,13,13,13,99,99,99,99,99,99,99,99,99,99},
        {99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
    },
}

infoMAP = {
	{ 7, 70, 5, {00,02,03,04,05,06,09,10,11}, {64,11,21,20,27,22,12,5,3}, "STAR", 19, 18, 3, "Easy"},
	{ 6, 75, 3, {00,13,04,02}, {85,173,8,21}, "CAT1", 19, 21, 3, "Easy"},
	{ 5, 80, 3, {00,02,03,04}, {121,58,195,128}, "CAT2", 24, 26, 3, "Normal"},
	{ 4, 80, 8, {00,10,06,04,03,02,01,09}, {344,57,56,52,44,32,35,36}, "PUZZLE1", 29, 29, 2, "Hard"},
	{ 4, 80, 8, {00,09,10,06,03,04}, {156,40,252,96,4,1}, "FLOWER1", 27, 27, 3, "Easy"},
	{ 3, 88, 8, {09,10,12,07,05,06}, {145,221,388,28,31,27}, "FLOWER2", 38, 33, 3, "Normal"},
	{ 3, 88, 8, {00,10,09,03}, {181,163,321,2}, "ELEPHANT", 29, 38, 3, "Easy"},
	{ 3, 88, 8, {00,02,10,06,01,04,03}, {624,176,96,144,49,144,136}, "PUZZLE2", 39, 39, 3, "Hard"},
	{ 6, 75, 8, {00,10,09,04,03,06,11,02,05,12}, {75,14,15,8,9,18,3,6,13,7}, "SUGAR1", 18, 21, 3, "Easy"},
	{ 3, 80, 8, {00,06,05,11,04,03}, {122,179,50,23,45,25}, "PLANET1", 34, 24, 3, "Normal"}, 
	{ 3, 92, 1, {00,03,04,12,02,05,11,09}, {122,97,16,5,101,183,222,18}, "CAKE1", 31, 45, 3, "Hard"},
	{ 3, 92, 1, {15,00,04,12,03,13}, {233,295,111,12,34,148}, "BATMAN", 29, 43, 3, "Normal"},
}

tablePuzzle = {
    {
        {10, 10, selectMAP[1],1, true, true, "easy"}, {75, 10, selectMAP[2],2, false, true, "easy"}, {140, 10, selectMAP[3],3, false, true, "middle"},
        {10, 75, selectMAP[4],4, false, true, "hard"}, {75, 75, selectMAP[5],5, false,true, "easy"}, {140, 75, selectMAP[6],6, false, true, "middle"}  
    },
    {
        {10, 10, selectMAP[7],7, false, true, "easy"}, {75, 10, selectMAP[8],8, false, true, "hard"}, {140, 10, selectMAP[9],9, false, true, "easy"},
        {10, 75, selectMAP[10],10, false, true, "middle"}, {75, 75, selectMAP[11],11, false, true, "hard"}, {140, 75, selectMAP[12],12, false, false, "middle"}  
    },
}

MAP = selectMAP[indexMap]

MAP.CELL_SIZE = infoMAP[indexMap][1]
MAP.POS_X = infoMAP[indexMap][2]
MAP.POS_Y = infoMAP[indexMap][3]
MAP.COLOR = infoMAP[indexMap][4]
MAP.COLOR.NB = infoMAP[indexMap][5]
MAP.NAME = infoMAP[indexMap][6]
MAP.LARG = infoMAP[indexMap][7]
MAP.HAUT = infoMAP[indexMap][8]
MAP.MINI = infoMAP[indexMap][9]
MAP.MINI = infoMAP[indexMap][10]
MAP.MINI = infoMAP[indexMap][11]

function initPuzzle()
    MAP = selectMAP[indexMap]

    MAP.CELL_SIZE = infoMAP[indexMap][1]
    MAP.POS_X = infoMAP[indexMap][2]
    MAP.POS_Y = infoMAP[indexMap][3]
    MAP.COLOR = infoMAP[indexMap][4]
    MAP.COLOR.NB = infoMAP[indexMap][5]
    MAP.NAME = infoMAP[indexMap][6]
    MAP.LARG = infoMAP[indexMap][7]
    MAP.HAUT = infoMAP[indexMap][8]
    MAP.MINI = infoMAP[indexMap][9]
    MAP.MINI = infoMAP[indexMap][10]
    MAP.MINI = infoMAP[indexMap][11]

    indexColor = 1
    selectedColor = MAP.COLOR[indexColor];  
    colorSelect_SIZE = 6 

    GRID = create_grid(MAP.HAUT, MAP.LARG, 99)
    
    GRID.CELL_SIZE = MAP.CELL_SIZE
    GRID.POS_X = MAP.POS_X
    GRID.POS_Y = MAP.POS_Y
    GRID.COLOR = MAP.COLOR
    GRID.COLOR.Q = {14,11,21,20,27,22,12,5,3}

    
    pixTotal = countDifferences(GRID, MAP)
end


function create_grid(rows, cols, value)
    local grid = {}
    for i = 1, rows do
        grid[i] = {}
        for j = 1, cols do
            grid[i][j] = value
        end
    end
    return grid
end

GRID = create_grid(MAP.HAUT, MAP.LARG, 99)

GRID.CELL_SIZE = MAP.CELL_SIZE
GRID.POS_X = MAP.POS_X
GRID.POS_Y = MAP.POS_Y
GRID.COLOR = MAP.COLOR
GRID.COLOR.Q = {14,11,21,20,27,22,12,5,3}

function drawGrid()
    for y = 1, #GRID do
        for x = 1, #GRID[y] do
            local color = GRID[y][x]
            local posX = GRID.POS_X + (x - 1) * GRID.CELL_SIZE
            local posY = GRID.POS_Y + (y - 1) * GRID.CELL_SIZE

            if color == 99 then
                rect(posX, posY, GRID.CELL_SIZE, GRID.CELL_SIZE, 8) 
                pix(posX + GRID.CELL_SIZE // 2, posY + GRID.CELL_SIZE // 2, 13)
            else
                rect(posX, posY, GRID.CELL_SIZE, GRID.CELL_SIZE, color)
            end    

            if solucePuzzle and GRID[y][x] ~= MAP[y][x] then
                    rectb(posX, posY, GRID.CELL_SIZE, GRID.CELL_SIZE, rainbowColors[rainbowIndex])
            end
        end
    end
end

function resetGrid(g1)    
    for i = 1, #g1 do
        for j = 1, #g1[i] do
            g1[i][j] = 99
        end
    end
end

function countDifferences(t1, t2)
    local count = 0
    local total = 0

    if #t1 ~= #t2 then return -1 end  

    for i = 1, #t1 do
        if #t1[i] ~= #t2[i] then return -1 end  

        for j = 1, #t1[i] do
            if t1[i][j] ~= t2[i][j] then
                count = count + 1 
            end
        end
    end

    return count
end

pixTotal = countDifferences(GRID, MAP)

MINI = {}
MINI.CELL_SIZE = 2 
MINI.POS_X = 2  
MINI.POS_Y = 23  

function drawMiniGrid()
    for y = 1, #MAP do
        for x = 1, #MAP[y] do
            local color = MAP[y][x]
            local posX = MINI.POS_X + (x - 1) * MINI.CELL_SIZE
            local posY = MINI.POS_Y + (y - 1) * MINI.CELL_SIZE
                
            local centerX = posX + math.floor(MINI.CELL_SIZE / 2)
            local centerY = posY + math.floor(MINI.CELL_SIZE / 2)

            if color ~= 99 then
                rect(posX, posY, MINI.CELL_SIZE, MINI.CELL_SIZE, color)  
            else
                rect(posX, posY, MINI.CELL_SIZE, MINI.CELL_SIZE, 8) 
                pix(centerX, centerY, 13)
            end
        end
    end
end

function nextPuzzle()        
    local ajustText = 20
    local ajustIcon = 15
    local iconSize = 60

    if prev_lb == nil then prev_lb = false end  

    for i, pos in ipairs(tablePuzzle[pagePuzzle]) do
        local x, y = pos[1] + ajustIcon, pos[2]

        local hover = mX >= x and mX <= x + iconSize and mY >= y and mY <= y + iconSize
        local fillColor = hover and 3 or 13  

        local keyLockPuzzle = pos[6]
        local Difficulty = pos[7]
        countLock = 0 

        rect(x, y, iconSize, iconSize, 8)  
        rectb(x, y, iconSize, iconSize, fillColor)

        if prev_lb and not lb and hover and keyLockPuzzle then
           unLock = i
           indexMap = pos[4]
           swapScreen = 2
           initPuzzle()
        end


        for pagePuzzleIndex, page in ipairs(tablePuzzle) do
            for i, cell in ipairs(page) do
                if cell[5] == true then
                    countLock = countLock + 1
                end
            end
        end

        if countLock >= 11 then
            tablePuzzle[2][6][6] = true
        end

        local puzzleMAP = pos[3]
        local unlockPuzzle = pos[5]

        if puzzleMAP then
            local rows = #puzzleMAP
            local cols = #puzzleMAP[1]

            local maxPuzzleSize = math.max(rows, cols)
            local cellSize = math.floor((iconSize - 8) / maxPuzzleSize)

            local startX = x + (iconSize - (cols * cellSize)) / 2
            local startY = y + (iconSize - (rows * cellSize)) / 2
            for py = 1, rows do
                for px = 1, cols do
                    local color = puzzleMAP[py][px]
                    local posX = startX + (px - 1) * cellSize
                    local posY = startY + (py - 1) * cellSize

                    if unlockPuzzle and keyLockPuzzle then
                        if color ~= 99 then
                            rect(posX, posY, cellSize, cellSize, color)
                        else
                            rect(posX, posY, cellSize, cellSize, 8) 
                        end
                    elseif unlockPuzzle == false and keyLockPuzzle then
                        spr(1, x + 18, y + 15, 1, 1)
                        spr(2, x + 26, y + 15, 1, 1)
                        spr(3, x + 34, y + 15, 1, 1)
                        
                        spr(17, x + 18, y + 23, 1, 1)
                        spr(18, x + 26, y + 23, 1, 1)
                        spr(19, x + 34, y + 23, 1, 1)
                        
                        spr(33, x + 18, y + 31, 1, 1)
                        spr(34, x + 26, y + 31, 1, 1)
                        spr(35, x + 34, y + 31, 1, 1)
                        
                        spr(49, x + 18, y + 39, 1, 1)
                        spr(50, x + 26, y + 39, 1, 1)
                        spr(51, x + 34, y + 39, 1, 1)
                    elseif unlockPuzzle == false and keyLockPuzzle == false then
                        spr(36, x + 14, y + 14, 2, 2)
                        spr(37, x + 30, y + 14, 2, 2) 
                        spr(52, x + 14, y + 30, 2, 2)
                        spr(53, x + 30, y + 30, 2, 2) 
                    end
                end
            end

            if Difficulty == "easy" then
                spr(0, x + 50, y + 2, 1, 1)
            elseif Difficulty == "middle" then 
                spr(16, x + 50, y + 2, 1, 1)
            elseif Difficulty == "hard" then
                spr(32, x + 50, y + 2, 1, 1)
            end
        end
    end

    print("SELECT NEXT PUZZLE", 30 + ajustText, 1, 12)
    print(pagePuzzle, 140 + ajustText, 1, 12)
    print(" / " .. #tablePuzzle, 145 + ajustText, 1, 12)
end

explosions = {}

function create_explosion(x, y, nb_particules, portee, couleur)
    local explosion = {
        particles = {},
        time = 0,
        duration = 30 
    }

    for i = 1, nb_particules do
        local angle = math.random() * 2 * math.pi
        local speed = math.random() * (portee / 15) + 1
        table.insert(explosion.particles, {
            x = x,
            y = y,
            dx = math.cos(angle) * speed,
            dy = math.sin(angle) * speed,
            color = couleur
        })
    end

    table.insert(explosions, explosion)
end

function update_explosions()
    for i = #explosions, 1, -1 do
        local e = explosions[i]
        e.time = e.time + 1

        for _, p in ipairs(e.particles) do
            p.x = p.x + p.dx
            p.y = p.y + p.dy
            pix(p.x, p.y, p.color)
        end

        if e.time >= e.duration then
            table.remove(explosions, i)
        end
    end
end

function TIC()
    cls(0) 
	mX, mY, lb, _, rb, scrollX, scrollY= mouse()

    poke(0x3ffb,1)
    if btnp(2) then  
        indexMap = indexMap - 1
        if indexMap < 1 then indexMap = #selectMAP end
    end
    if btnp(3) then  
        indexMap = indexMap + 1
        if indexMap > #selectMAP then indexMap = 1 end
    end
    
    rainbowTimer = rainbowTimer + 1
    if rainbowTimer > 10 then 
        rainbowTimer = 0
        rainbowIndex = rainbowIndex + 1
        if rainbowIndex > #rainbowColors then
            rainbowIndex = 1
        end
    end

    if swapScreen == 0 then
        print("Pen Pixel", 100, 50, 12)
        print("click anywhere", 100, 70, 12)
        print("Demo v2.7", 1, 130, 12) 
        
        if prev_lb and not lb then
            swapScreen = 1
        end

        prev_lb = lb
    end
   
    if swapScreen == 1 then
        cls(0)

        nextPuzzle()

        local size = 7  

        local rightX, rightY = 225, 72

        local hoverRight = mX >= rightX and mX <= rightX + size and mY >= rightY - size and mY <= rightY + size
        local rightColor = hoverRight and 3 or 12  
        local rightBorderColor = 14  

        if pagePuzzle <= pageMax - 1 then
            tri(rightX, rightY - size, rightX, rightY + size, rightX + size, rightY, rightColor) 
            trib(rightX, rightY - size, rightX, rightY + size, rightX + size, rightY, rightBorderColor) 
        end

        if prev_lb and not lb and hoverRight then
            pagePuzzle = pagePuzzle + 1
            if pagePuzzle == pageMax + 1 then
                pagePuzzle = pageMax 
            end 
        end

        local leftX, leftY = 15, 72

        local hoverLeft = mX >= leftX - size and mX <= leftX and mY >= leftY - size and mY <= leftY + size
        local leftColor = hoverLeft and 3 or 12  
        local leftBorderColor = 14  

        if pagePuzzle >= 2 then
            tri(leftX, leftY - size, leftX, leftY + size, leftX - size, leftY, leftColor)  
            trib(leftX, leftY - size, leftX, leftY + size, leftX - size, leftY, leftBorderColor) 
        end

        if prev_lb and not lb and hoverLeft and pagePuzzle >= 0 then
            pagePuzzle = pagePuzzle - 1
            if pagePuzzle == 0 then
                pagePuzzle = 1
            end 
        end        

        prev_lb = lb        

        if key(48) or key(50) then
            swapScreen = 0
        end
    end

    if swapScreen == 2 then
        drawGrid()
        
        drawMiniGrid()

        local totalPixelColor = 0

        for i, color in ipairs(MAP.COLOR) do
            local yPos = MAP.POS_Y + (colorSelect_SIZE + 2) * (i - 1)
            rect(214, yPos, colorSelect_SIZE, colorSelect_SIZE, color)
            rectb(214, yPos, colorSelect_SIZE, colorSelect_SIZE, 13)

            local pixelColor = 0
            for y = 1, #GRID do
                for x = 1, #GRID[y] do
                    if GRID[y][x] == color then
                        pixelColor = pixelColor + 1
                    end
                end
            end

            local countPixelColor = MAP.COLOR.NB[i] - pixelColor
            
            totalPixelColor = totalPixelColor + countPixelColor

            print(countPixelColor, 223, yPos + 1, 12)
        end

        if totalPixelColor <= 0 then

            if solucePuzzle then
                rectb(2, 115, 18, 18, rainbowColors[rainbowIndex])
            else
                rect(2, 115, 18, 18, 13)
            end
            spr(4, 3, 116, 1, 1)
            spr(5, 11, 116, 1, 1)
            spr(20, 3, 124, 1, 1)
            spr(21, 11, 124, 1, 1)

        else
            solucePuzzle = false
        end

        rect(squarePosX - squareSize, squarePosY - squareSize, squareSize * 2, squareSize * 2, 8)
        rectb(squarePosX - squareSize, squarePosY - squareSize, squareSize * 2, squareSize * 2, 13)

        for i = -crossLarg, crossLarg do
            line(crossPosX - crossSize + i, crossPosY - crossSize, crossPosX + crossSize + i, crossPosY + crossSize, 2)
            line(crossPosX - crossSize + i, crossPosY + crossSize, crossPosX + crossSize + i, crossPosY - crossSize, 2)
        end
        
        arrowPosY = (MAP.POS_Y + 3) + (colorSelect_SIZE + 2) * (indexColor - 1)  
        arrowPosX = 212  

        tri(arrowPosX, arrowPosY, arrowPosX - 4, arrowPosY - 4, arrowPosX - 4, arrowPosY + 4, 12)

        pixCount = countDifferences(GRID, MAP)

        print(pixCount, 210, 113, 12)
        line(210, 128, 235, 115, 12)
        print(pixTotal, 220, 125, 12)
        if pixCount == 0 then
            GRID = MAP
            tablePuzzle[pagePuzzle][unLock][5] = true 
            swapScreen = 3
        end

        rect(1, 1, 67, 19, 8)
        rectb(0, 0, 68, 21, 13)
        print("#".. indexMap, 2, 3, 12)
        print(infoMAP[indexMap][6], 20, 3, 12)
        local colorGem = 0
        local colorPrint = 0
        if infoMAP[indexMap][10] == "Easy" then
            colorGem = 0
            colorPrint = 6
        elseif infoMAP[indexMap][10] == "Normal" then
            colorGem = 16
            colorPrint = 10
        elseif infoMAP[indexMap][10] == "Hard" then
            colorGem = 32
            colorPrint = 3
        end
        spr(colorGem, 2, 10, 1, 1)
        print(infoMAP[indexMap][10], 14, 11, colorPrint)

        if cellDelete then
            for i = -crossLarg, crossLarg do
                line(mX - crossSize + i, mY - crossSize, mX + crossSize + i, mY + crossSize, 2)
                line(mX - crossSize + i, mY + crossSize, mX + crossSize + i, mY - crossSize, 2)
            end
        else
            rect(mX - (GRID.CELL_SIZE // 2), mY - (GRID.CELL_SIZE // 2), GRID.CELL_SIZE, GRID.CELL_SIZE, selectedColor)
        end

        if scrollY < 0 then
            cellDelete = false
            indexColor = indexColor + 1
            if indexColor > #MAP.COLOR then
                indexColor = 1 
            end
            selectedColor = MAP.COLOR[indexColor]
        elseif scrollY > 0 then
            cellDelete = false
            indexColor = indexColor - 1
            if indexColor < 1 then
                indexColor = #MAP.COLOR
            end
            selectedColor = MAP.COLOR[indexColor]
        end
        
        if prev_rb and not rb and cellDelete == false then
            cellDelete = true 
        end

        prev_rb = rb

        if lb then 
            local gridX = math.floor((mX - GRID.POS_X) / GRID.CELL_SIZE) + 1
            local gridY = math.floor((mY - GRID.POS_Y) / GRID.CELL_SIZE) + 1

            if gridX >= 1 and gridX <= #GRID[1] and gridY >= 1 and gridY <= #GRID then
                
                local pixelCount = 0
                for y = 1, #GRID do
                    for x = 1, #GRID[y] do
                        if GRID[y][x] == selectedColor then
                            pixelCount = pixelCount + 1
                        end
                    end
                end
                local remainingPixels = MAP.COLOR.NB[indexColor] - pixelCount

                if cellDelete then
                    GRID[gridY][gridX] = 99 
                elseif remainingPixels > 0 then
                    GRID[gridY][gridX] = selectedColor 
                    create_explosion(mX, mY, 2, 5, selectedColor)
                end
            end

            if mX >= (squarePosX - squareSize) and mX <= (squarePosX + squareSize) and 
            mY >= (squarePosY - squareSize) and mY <= (squarePosY + squareSize) then
                cellDelete = true 
            end

            if mX >= 215 and mX <= 215 + colorSelect_SIZE then
                for i, color in ipairs(MAP.COLOR) do
                    local yPos = MAP.POS_Y + (colorSelect_SIZE + 2) * (i - 1)  
                    if mY >= yPos and mY <= yPos + colorSelect_SIZE then
                        local pixelCount = 0
                        for y = 1, #GRID do
                            for x = 1, #GRID[y] do
                                if GRID[y][x] == color then
                                    pixelCount = pixelCount + 1
                                end
                            end
                        end
                        local remainingPixels = MAP.COLOR.NB[i] - pixelCount

                        indexColor = i  
                        selectedColor = MAP.COLOR[indexColor]  
                        
                        cellDelete = false 
                    end
                end
            end
        end
        update_explosions()

        if prev_lb and not lb then
            if totalPixelColor <= 0 then                
                if mX >= 1 and mX <= 1 + 16 and mY >= 114 and mY <= 114 + 16 then
                    solucePuzzle = true
                    timeRemaining = timerSoluce  
                    countSoluce = countSoluce + 1 
                end
            end
        end

        prev_lb = lb

        local currentTime = time()
        dt = (currentTime - lastTime) / 1000  
        lastTime = currentTime  

        if solucePuzzle then
            if timeRemaining > 0 then
                timeRemaining = timeRemaining - dt  
            else
                solucePuzzle = false  
            end
        end      

        if key(48) or key(50) then
            swapScreen = 5
        end
    end

    if swapScreen == 3 then
        cls(0)

        for y = 1, #GRID do
            for x = 1, #GRID[y] do
                local color = GRID[y][x]
                local posX = GRID.POS_X + (x - 1) * GRID.CELL_SIZE
                local posY = GRID.POS_Y + (y - 1) * GRID.CELL_SIZE
    
                if color == 99 then
                    rect(posX, posY, GRID.CELL_SIZE, GRID.CELL_SIZE, 0) 
                else
                    rect(posX, posY, GRID.CELL_SIZE, GRID.CELL_SIZE, color)
                end
            end
        end

        local yesX, yesY, colorY = 15, 76, 12
        local noX, noY, colorN = 40, 76, 12

        local yesWidth, yesHeight = 21, 10
        local noWidth, noHeight = 15, 10

        if swapScreen == 3 then            
            print("BRAVO !!!", 10, 58, 12)
            print("One More", 10, 67, 12)

            print("Yes", yesX, yesY, colorY)
            print("No", noX, noY, colorN)
        end

        if mX >= yesX and mX <= yesX + yesWidth and mY >= yesY and mY <= yesY + yesHeight then
            colorY = 5  
            print("Yes", yesX, yesY, colorY)
            if prev_lb and not lb  then 
                swapScreen = 1
            end
        end

        if mX >= noX and mX <= noX + noWidth and mY >= noY and mY <= noY + noHeight then
            colorN = 4  
            print("No", noX, noY, colorN)
            if prev_lb and not lb then
                swapScreen = 0
            end
        end

        prev_lb = lb
    end

    if swapScreen == 4 then
        print("Thanks", 10, 58, 12)
        print("for", 18, 67, 12)
        print("playing", 10, 76, 12)
    end   

    if swapScreen == 5 then
        cls(0)
        print("Abort the puzzle ?", 70, 58, 12)
        print("Yes", 95, 67, 12)
        print("No", 130, 67, 12)
        
        if mX >= 95 and mX <= 95 + 17 and mY >= 67 and mY <= 67 + 10 then
            print("Yes", 95, 67, 5)
            if prev_lb and not lb then
                swapScreen = 1
            end
        end

        if mX >= 130 and mX <= 130 + 12 and mY >= 67 and mY <= 67 + 10 then
            print("No", 130, 67, 4)
            if prev_lb and not lb then
                swapScreen = 2
            end
        end
    end

    prev_lb = lb

end