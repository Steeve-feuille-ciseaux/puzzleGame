-- main.lua

-- Taille des cellules à l'écran (pixels)
local cellSize = 8

-- Palette de couleurs de base (index TIC-80 -> RGB normalisé 0-1)
local palette = {
    [0] = {1, 1, 1},       -- Blanc
    [1] = {0.2, 0.2, 0.2}, -- Gris foncé
    [2] = {1, 0, 0},       -- Rouge
    [3] = {0, 1, 0},       -- Vert
    [4] = {0, 0, 1},       -- Bleu
    [5] = {1, 1, 0},       -- Jaune
    [6] = {1, 0, 1},       -- Magenta
    [9] = {0, 1, 1},       -- Cyan
    [10] = {0.5, 0.5, 0},  -- Olive
    [11] = {1, 0.5, 0},    -- Orange
    [99] = nil             -- Case vide (ne pas afficher)
}

-- Exemple : premier puzzle de selectMAP
local puzzleMap = {
    {99,99,99,99,99,99,99,99,99,00,99,99,99,99,99,99,99,99,99},
    {99,99,99,99,99,99,99,99,00,02,00,99,99,99,99,99,99,99,99},
    {99,99,99,99,99,99,99,00,02,02,03,00,99,99,99,99,99,99,99},
    {99,99,99,99,99,99,99,00,02,03,03,00,99,99,99,99,99,99,99},
    {99,99,99,99,99,99,00,02,03,03,03,04,00,99,99,99,99,99,99},
    {99,99,99,99,99,99,00,03,03,03,04,04,00,99,99,99,99,99,99},
    {00,00,00,00,00,00,03,03,03,04,04,04,05,00,00,00,00,00,00},
    {00,02,02,02,02,03,03,00,04,04,04,00,05,05,06,06,06,09,00},
    {99,00,02,02,03,03,03,00,04,04,05,00,05,06,06,06,09,00,99},
    {99,99,00,03,03,03,04,00,04,05,05,00,06,06,06,09,00,99,99},
    {99,99,99,00,03,04,04,04,05,05,05,06,06,06,09,00,99,99,99},
    {99,99,99,99,00,04,04,05,05,05,06,06,06,09,00,99,99,99,99},
    {99,99,99,99,00,04,05,05,05,06,06,06,09,09,00,99,99,99,99},
    {99,99,99,00,04,05,05,05,06,06,06,09,09,09,10,00,99,99,99},
    {99,99,99,00,05,05,05,06,00,00,00,09,09,10,10,00,99,99,99},
    {99,99,00,05,05,05,00,00,99,99,99,00,00,10,10,11,00,99,99},
    {99,99,00,05,05,00,99,99,99,99,99,99,99,00,11,11,00,99,99},
    {99,99,00,00,00,99,99,99,99,99,99,99,99,99,00,00,00,99,99},
}

function love.draw()
    for y = 1, #puzzleMap do
        for x = 1, #puzzleMap[y] do
            local colorIndex = puzzleMap[y][x]
            local color = palette[colorIndex]
            if color then
                love.graphics.setColor(color)
                love.graphics.rectangle("fill", (x - 1) * cellSize, (y - 1) * cellSize, cellSize, cellSize)
            end
        end
    end
end
